#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebLT.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_BanLapTop")]
	public partial class QL_LPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBINHLUAN(BINHLUAN instance);
    partial void UpdateBINHLUAN(BINHLUAN instance);
    partial void DeleteBINHLUAN(BINHLUAN instance);
    partial void InsertCTDONHANG(CTDONHANG instance);
    partial void UpdateCTDONHANG(CTDONHANG instance);
    partial void DeleteCTDONHANG(CTDONHANG instance);
    partial void InsertDANHMUC(DANHMUC instance);
    partial void UpdateDANHMUC(DANHMUC instance);
    partial void DeleteDANHMUC(DANHMUC instance);
    partial void InsertDONHANG(DONHANG instance);
    partial void UpdateDONHANG(DONHANG instance);
    partial void DeleteDONHANG(DONHANG instance);
    partial void InsertKHOANGGIA(KHOANGGIA instance);
    partial void UpdateKHOANGGIA(KHOANGGIA instance);
    partial void DeleteKHOANGGIA(KHOANGGIA instance);
    partial void InsertNHOMTIN(NHOMTIN instance);
    partial void UpdateNHOMTIN(NHOMTIN instance);
    partial void DeleteNHOMTIN(NHOMTIN instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertQUYEN(QUYEN instance);
    partial void UpdateQUYEN(QUYEN instance);
    partial void DeleteQUYEN(QUYEN instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertSPGIAMGIA(SPGIAMGIA instance);
    partial void UpdateSPGIAMGIA(SPGIAMGIA instance);
    partial void DeleteSPGIAMGIA(SPGIAMGIA instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertTINTUC(TINTUC instance);
    partial void UpdateTINTUC(TINTUC instance);
    partial void DeleteTINTUC(TINTUC instance);
    #endregion
		
		public QL_LPDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_BanLapTopConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QL_LPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_LPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_LPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_LPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BINHLUAN> BINHLUANs
		{
			get
			{
				return this.GetTable<BINHLUAN>();
			}
		}
		
		public System.Data.Linq.Table<CTDONHANG> CTDONHANGs
		{
			get
			{
				return this.GetTable<CTDONHANG>();
			}
		}
		
		public System.Data.Linq.Table<DANHMUC> DANHMUCs
		{
			get
			{
				return this.GetTable<DANHMUC>();
			}
		}
		
		public System.Data.Linq.Table<DONHANG> DONHANGs
		{
			get
			{
				return this.GetTable<DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHOANGGIA> KHOANGGIAs
		{
			get
			{
				return this.GetTable<KHOANGGIA>();
			}
		}
		
		public System.Data.Linq.Table<NHOMTIN> NHOMTINs
		{
			get
			{
				return this.GetTable<NHOMTIN>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<QUYEN> QUYENs
		{
			get
			{
				return this.GetTable<QUYEN>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<SPGIAMGIA> SPGIAMGIAs
		{
			get
			{
				return this.GetTable<SPGIAMGIA>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<TINTUC> TINTUCs
		{
			get
			{
				return this.GetTable<TINTUC>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BINHLUAN")]
	public partial class BINHLUAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_BL;
		
		private int _ID_SP;
		
		private int _ID_TK;
		
		private System.DateTime _ngaybinhluan;
		
		private string _noidung;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BLChanging(int value);
    partial void OnID_BLChanged();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnID_TKChanging(int value);
    partial void OnID_TKChanged();
    partial void OnngaybinhluanChanging(System.DateTime value);
    partial void OnngaybinhluanChanged();
    partial void OnnoidungChanging(string value);
    partial void OnnoidungChanged();
    #endregion
		
		public BINHLUAN()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_BL
		{
			get
			{
				return this._ID_BL;
			}
			set
			{
				if ((this._ID_BL != value))
				{
					this.OnID_BLChanging(value);
					this.SendPropertyChanging();
					this._ID_BL = value;
					this.SendPropertyChanged("ID_BL");
					this.OnID_BLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="Int NOT NULL")]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TK", DbType="Int NOT NULL")]
		public int ID_TK
		{
			get
			{
				return this._ID_TK;
			}
			set
			{
				if ((this._ID_TK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TKChanging(value);
					this.SendPropertyChanging();
					this._ID_TK = value;
					this.SendPropertyChanged("ID_TK");
					this.OnID_TKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaybinhluan", DbType="Date NOT NULL")]
		public System.DateTime ngaybinhluan
		{
			get
			{
				return this._ngaybinhluan;
			}
			set
			{
				if ((this._ngaybinhluan != value))
				{
					this.OnngaybinhluanChanging(value);
					this.SendPropertyChanging();
					this._ngaybinhluan = value;
					this.SendPropertyChanged("ngaybinhluan");
					this.OnngaybinhluanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noidung", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string noidung
		{
			get
			{
				return this._noidung;
			}
			set
			{
				if ((this._noidung != value))
				{
					this.OnnoidungChanging(value);
					this.SendPropertyChanging();
					this._noidung = value;
					this.SendPropertyChanged("noidung");
					this.OnnoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_BINHLUAN", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.BINHLUANs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.BINHLUANs.Add(this);
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_BINHLUAN", Storage="_TAIKHOAN", ThisKey="ID_TK", OtherKey="ID_TK", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.BINHLUANs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.BINHLUANs.Add(this);
						this._ID_TK = value.ID_TK;
					}
					else
					{
						this._ID_TK = default(int);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDONHANG")]
	public partial class CTDONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CTDH;
		
		private int _ID_DH;
		
		private int _ID_SP;
		
		private int _soluong;
		
		private int _dongia;
		
		private EntityRef<DONHANG> _DONHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CTDHChanging(int value);
    partial void OnID_CTDHChanged();
    partial void OnID_DHChanging(int value);
    partial void OnID_DHChanged();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnsoluongChanging(int value);
    partial void OnsoluongChanged();
    partial void OndongiaChanging(int value);
    partial void OndongiaChanged();
    #endregion
		
		public CTDONHANG()
		{
			this._DONHANG = default(EntityRef<DONHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CTDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CTDH
		{
			get
			{
				return this._ID_CTDH;
			}
			set
			{
				if ((this._ID_CTDH != value))
				{
					this.OnID_CTDHChanging(value);
					this.SendPropertyChanging();
					this._ID_CTDH = value;
					this.SendPropertyChanged("ID_CTDH");
					this.OnID_CTDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DH", DbType="Int NOT NULL")]
		public int ID_DH
		{
			get
			{
				return this._ID_DH;
			}
			set
			{
				if ((this._ID_DH != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DHChanging(value);
					this.SendPropertyChanging();
					this._ID_DH = value;
					this.SendPropertyChanged("ID_DH");
					this.OnID_DHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="Int NOT NULL")]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int NOT NULL")]
		public int soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dongia", DbType="Int NOT NULL")]
		public int dongia
		{
			get
			{
				return this._dongia;
			}
			set
			{
				if ((this._dongia != value))
				{
					this.OndongiaChanging(value);
					this.SendPropertyChanging();
					this._dongia = value;
					this.SendPropertyChanged("dongia");
					this.OndongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CTDONHANG", Storage="_DONHANG", ThisKey="ID_DH", OtherKey="ID_DH", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.CTDONHANGs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.CTDONHANGs.Add(this);
						this._ID_DH = value.ID_DH;
					}
					else
					{
						this._ID_DH = default(int);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CTDONHANG", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CTDONHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CTDONHANGs.Add(this);
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHMUC")]
	public partial class DANHMUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DM;
		
		private string _tendanhmuc;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DMChanging(int value);
    partial void OnID_DMChanged();
    partial void OntendanhmucChanging(string value);
    partial void OntendanhmucChanged();
    #endregion
		
		public DANHMUC()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_DM
		{
			get
			{
				return this._ID_DM;
			}
			set
			{
				if ((this._ID_DM != value))
				{
					this.OnID_DMChanging(value);
					this.SendPropertyChanging();
					this._ID_DM = value;
					this.SendPropertyChanged("ID_DM");
					this.OnID_DMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tendanhmuc", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string tendanhmuc
		{
			get
			{
				return this._tendanhmuc;
			}
			set
			{
				if ((this._tendanhmuc != value))
				{
					this.OntendanhmucChanging(value);
					this.SendPropertyChanging();
					this._tendanhmuc = value;
					this.SendPropertyChanged("tendanhmuc");
					this.OntendanhmucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUC_SANPHAM", Storage="_SANPHAMs", ThisKey="ID_DM", OtherKey="ID_DM")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUC = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONHANG")]
	public partial class DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DH;
		
		private System.Nullable<int> _ID_TK;
		
		private System.Nullable<int> _ID_TIN;
		
		private System.DateTime _ngaylap;
		
		private System.DateTime _ngaynhanhang;
		
		private string _diachigiaohang;
		
		private string _phone;
		
		private System.Nullable<bool> _trangthai;
		
		private string _hotenkh;
		
		private EntitySet<CTDONHANG> _CTDONHANGs;
		
		private EntityRef<TINTUC> _TINTUC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DHChanging(int value);
    partial void OnID_DHChanged();
    partial void OnID_TKChanging(System.Nullable<int> value);
    partial void OnID_TKChanged();
    partial void OnID_TINChanging(System.Nullable<int> value);
    partial void OnID_TINChanged();
    partial void OnngaylapChanging(System.DateTime value);
    partial void OnngaylapChanged();
    partial void OnngaynhanhangChanging(System.DateTime value);
    partial void OnngaynhanhangChanged();
    partial void OndiachigiaohangChanging(string value);
    partial void OndiachigiaohangChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OntrangthaiChanging(System.Nullable<bool> value);
    partial void OntrangthaiChanged();
    partial void OnhotenkhChanging(string value);
    partial void OnhotenkhChanged();
    #endregion
		
		public DONHANG()
		{
			this._CTDONHANGs = new EntitySet<CTDONHANG>(new Action<CTDONHANG>(this.attach_CTDONHANGs), new Action<CTDONHANG>(this.detach_CTDONHANGs));
			this._TINTUC = default(EntityRef<TINTUC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_DH
		{
			get
			{
				return this._ID_DH;
			}
			set
			{
				if ((this._ID_DH != value))
				{
					this.OnID_DHChanging(value);
					this.SendPropertyChanging();
					this._ID_DH = value;
					this.SendPropertyChanged("ID_DH");
					this.OnID_DHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TK", DbType="Int")]
		public System.Nullable<int> ID_TK
		{
			get
			{
				return this._ID_TK;
			}
			set
			{
				if ((this._ID_TK != value))
				{
					this.OnID_TKChanging(value);
					this.SendPropertyChanging();
					this._ID_TK = value;
					this.SendPropertyChanged("ID_TK");
					this.OnID_TKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIN", DbType="Int")]
		public System.Nullable<int> ID_TIN
		{
			get
			{
				return this._ID_TIN;
			}
			set
			{
				if ((this._ID_TIN != value))
				{
					if (this._TINTUC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TINChanging(value);
					this.SendPropertyChanging();
					this._ID_TIN = value;
					this.SendPropertyChanged("ID_TIN");
					this.OnID_TINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaylap", DbType="Date NOT NULL")]
		public System.DateTime ngaylap
		{
			get
			{
				return this._ngaylap;
			}
			set
			{
				if ((this._ngaylap != value))
				{
					this.OnngaylapChanging(value);
					this.SendPropertyChanging();
					this._ngaylap = value;
					this.SendPropertyChanged("ngaylap");
					this.OnngaylapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaynhanhang", DbType="Date NOT NULL")]
		public System.DateTime ngaynhanhang
		{
			get
			{
				return this._ngaynhanhang;
			}
			set
			{
				if ((this._ngaynhanhang != value))
				{
					this.OnngaynhanhangChanging(value);
					this.SendPropertyChanging();
					this._ngaynhanhang = value;
					this.SendPropertyChanged("ngaynhanhang");
					this.OnngaynhanhangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachigiaohang", DbType="NVarChar(200)")]
		public string diachigiaohang
		{
			get
			{
				return this._diachigiaohang;
			}
			set
			{
				if ((this._diachigiaohang != value))
				{
					this.OndiachigiaohangChanging(value);
					this.SendPropertyChanging();
					this._diachigiaohang = value;
					this.SendPropertyChanged("diachigiaohang");
					this.OndiachigiaohangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="Char(16)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangthai", DbType="Bit")]
		public System.Nullable<bool> trangthai
		{
			get
			{
				return this._trangthai;
			}
			set
			{
				if ((this._trangthai != value))
				{
					this.OntrangthaiChanging(value);
					this.SendPropertyChanging();
					this._trangthai = value;
					this.SendPropertyChanged("trangthai");
					this.OntrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotenkh", DbType="NVarChar(250)")]
		public string hotenkh
		{
			get
			{
				return this._hotenkh;
			}
			set
			{
				if ((this._hotenkh != value))
				{
					this.OnhotenkhChanging(value);
					this.SendPropertyChanging();
					this._hotenkh = value;
					this.SendPropertyChanged("hotenkh");
					this.OnhotenkhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CTDONHANG", Storage="_CTDONHANGs", ThisKey="ID_DH", OtherKey="ID_DH")]
		public EntitySet<CTDONHANG> CTDONHANGs
		{
			get
			{
				return this._CTDONHANGs;
			}
			set
			{
				this._CTDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINTUC_DONHANG", Storage="_TINTUC", ThisKey="ID_TIN", OtherKey="ID_TIN", IsForeignKey=true)]
		public TINTUC TINTUC
		{
			get
			{
				return this._TINTUC.Entity;
			}
			set
			{
				TINTUC previousValue = this._TINTUC.Entity;
				if (((previousValue != value) 
							|| (this._TINTUC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINTUC.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._TINTUC.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._ID_TIN = value.ID_TIN;
					}
					else
					{
						this._ID_TIN = default(Nullable<int>);
					}
					this.SendPropertyChanged("TINTUC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDONHANGs(CTDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_CTDONHANGs(CTDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOANGGIA")]
	public partial class KHOANGGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKG;
		
		private int _cantren;
		
		private int _canduoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKGChanging(int value);
    partial void OnIDKGChanged();
    partial void OncantrenChanging(int value);
    partial void OncantrenChanged();
    partial void OncanduoiChanging(int value);
    partial void OncanduoiChanged();
    #endregion
		
		public KHOANGGIA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDKG
		{
			get
			{
				return this._IDKG;
			}
			set
			{
				if ((this._IDKG != value))
				{
					this.OnIDKGChanging(value);
					this.SendPropertyChanging();
					this._IDKG = value;
					this.SendPropertyChanged("IDKG");
					this.OnIDKGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cantren", DbType="Int NOT NULL")]
		public int cantren
		{
			get
			{
				return this._cantren;
			}
			set
			{
				if ((this._cantren != value))
				{
					this.OncantrenChanging(value);
					this.SendPropertyChanging();
					this._cantren = value;
					this.SendPropertyChanged("cantren");
					this.OncantrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canduoi", DbType="Int NOT NULL")]
		public int canduoi
		{
			get
			{
				return this._canduoi;
			}
			set
			{
				if ((this._canduoi != value))
				{
					this.OncanduoiChanging(value);
					this.SendPropertyChanging();
					this._canduoi = value;
					this.SendPropertyChanged("canduoi");
					this.OncanduoiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHOMTIN")]
	public partial class NHOMTIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NHOM;
		
		private string _tennhomtin;
		
		private EntitySet<TINTUC> _TINTUCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NHOMChanging(int value);
    partial void OnID_NHOMChanged();
    partial void OntennhomtinChanging(string value);
    partial void OntennhomtinChanged();
    #endregion
		
		public NHOMTIN()
		{
			this._TINTUCs = new EntitySet<TINTUC>(new Action<TINTUC>(this.attach_TINTUCs), new Action<TINTUC>(this.detach_TINTUCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NHOM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_NHOM
		{
			get
			{
				return this._ID_NHOM;
			}
			set
			{
				if ((this._ID_NHOM != value))
				{
					this.OnID_NHOMChanging(value);
					this.SendPropertyChanging();
					this._ID_NHOM = value;
					this.SendPropertyChanged("ID_NHOM");
					this.OnID_NHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tennhomtin", DbType="NVarChar(250)")]
		public string tennhomtin
		{
			get
			{
				return this._tennhomtin;
			}
			set
			{
				if ((this._tennhomtin != value))
				{
					this.OntennhomtinChanging(value);
					this.SendPropertyChanging();
					this._tennhomtin = value;
					this.SendPropertyChanged("tennhomtin");
					this.OntennhomtinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMTIN_TINTUC", Storage="_TINTUCs", ThisKey="ID_NHOM", OtherKey="ID_NHOM")]
		public EntitySet<TINTUC> TINTUCs
		{
			get
			{
				return this._TINTUCs;
			}
			set
			{
				this._TINTUCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TINTUCs(TINTUC entity)
		{
			this.SendPropertyChanging();
			entity.NHOMTIN = this;
		}
		
		private void detach_TINTUCs(TINTUC entity)
		{
			this.SendPropertyChanging();
			entity.NHOMTIN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TENQUYEN;
		
		private int _ID_TK;
		
		private EntitySet<QUYEN> _QUYENs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTENQUYENChanging(string value);
    partial void OnTENQUYENChanged();
    partial void OnID_TKChanging(int value);
    partial void OnID_TKChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._QUYENs = new EntitySet<QUYEN>(new Action<QUYEN>(this.attach_QUYENs), new Action<QUYEN>(this.detach_QUYENs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENQUYEN", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TENQUYEN
		{
			get
			{
				return this._TENQUYEN;
			}
			set
			{
				if ((this._TENQUYEN != value))
				{
					this.OnTENQUYENChanging(value);
					this.SendPropertyChanging();
					this._TENQUYEN = value;
					this.SendPropertyChanged("TENQUYEN");
					this.OnTENQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TK", DbType="Int NOT NULL")]
		public int ID_TK
		{
			get
			{
				return this._ID_TK;
			}
			set
			{
				if ((this._ID_TK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TKChanging(value);
					this.SendPropertyChanging();
					this._ID_TK = value;
					this.SendPropertyChanged("ID_TK");
					this.OnID_TKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_QUYEN", Storage="_QUYENs", ThisKey="TENQUYEN", OtherKey="TENQUYEN")]
		public EntitySet<QUYEN> QUYENs
		{
			get
			{
				return this._QUYENs;
			}
			set
			{
				this._QUYENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_PHANQUYEN", Storage="_TAIKHOAN", ThisKey="ID_TK", OtherKey="ID_TK", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._ID_TK = value.ID_TK;
					}
					else
					{
						this._ID_TK = default(int);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QUYENs(QUYEN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = this;
		}
		
		private void detach_QUYENs(QUYEN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUYEN")]
	public partial class QUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_QUYEN;
		
		private string _TENQUYEN;
		
		private EntityRef<PHANQUYEN> _PHANQUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_QUYENChanging(int value);
    partial void OnID_QUYENChanged();
    partial void OnTENQUYENChanging(string value);
    partial void OnTENQUYENChanged();
    #endregion
		
		public QUYEN()
		{
			this._PHANQUYEN = default(EntityRef<PHANQUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_QUYEN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_QUYEN
		{
			get
			{
				return this._ID_QUYEN;
			}
			set
			{
				if ((this._ID_QUYEN != value))
				{
					this.OnID_QUYENChanging(value);
					this.SendPropertyChanging();
					this._ID_QUYEN = value;
					this.SendPropertyChanged("ID_QUYEN");
					this.OnID_QUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENQUYEN", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TENQUYEN
		{
			get
			{
				return this._TENQUYEN;
			}
			set
			{
				if ((this._TENQUYEN != value))
				{
					if (this._PHANQUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTENQUYENChanging(value);
					this.SendPropertyChanging();
					this._TENQUYEN = value;
					this.SendPropertyChanged("TENQUYEN");
					this.OnTENQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_QUYEN", Storage="_PHANQUYEN", ThisKey="TENQUYEN", OtherKey="TENQUYEN", IsForeignKey=true)]
		public PHANQUYEN PHANQUYEN
		{
			get
			{
				return this._PHANQUYEN.Entity;
			}
			set
			{
				PHANQUYEN previousValue = this._PHANQUYEN.Entity;
				if (((previousValue != value) 
							|| (this._PHANQUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANQUYEN.Entity = null;
						previousValue.QUYENs.Remove(this);
					}
					this._PHANQUYEN.Entity = value;
					if ((value != null))
					{
						value.QUYENs.Add(this);
						this._TENQUYEN = value.TENQUYEN;
					}
					else
					{
						this._TENQUYEN = default(string);
					}
					this.SendPropertyChanged("PHANQUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_SP;
		
		private int _ID_DM;
		
		private string _tensanpham;
		
		private int _giabd;
		
		private string _trongluong;
		
		private string _mausac;
		
		private string _ImgLink;
		
		private string _memory;
		
		private string _hedieuhanh;
		
		private string _vga;
		
		private string _cpuz;
		
		private string _battery;
		
		private string _phukiendikem;
		
		private string _chedobaohanh;
		
		private EntitySet<BINHLUAN> _BINHLUANs;
		
		private EntitySet<CTDONHANG> _CTDONHANGs;
		
		private EntitySet<SPGIAMGIA> _SPGIAMGIAs;
		
		private EntityRef<DANHMUC> _DANHMUC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnID_DMChanging(int value);
    partial void OnID_DMChanged();
    partial void OntensanphamChanging(string value);
    partial void OntensanphamChanged();
    partial void OngiabdChanging(int value);
    partial void OngiabdChanged();
    partial void OntrongluongChanging(string value);
    partial void OntrongluongChanged();
    partial void OnmausacChanging(string value);
    partial void OnmausacChanged();
    partial void OnImgLinkChanging(string value);
    partial void OnImgLinkChanged();
    partial void OnmemoryChanging(string value);
    partial void OnmemoryChanged();
    partial void OnhedieuhanhChanging(string value);
    partial void OnhedieuhanhChanged();
    partial void OnvgaChanging(string value);
    partial void OnvgaChanged();
    partial void OncpuzChanging(string value);
    partial void OncpuzChanged();
    partial void OnbatteryChanging(string value);
    partial void OnbatteryChanged();
    partial void OnphukiendikemChanging(string value);
    partial void OnphukiendikemChanged();
    partial void OnchedobaohanhChanging(string value);
    partial void OnchedobaohanhChanged();
    #endregion
		
		public SANPHAM()
		{
			this._BINHLUANs = new EntitySet<BINHLUAN>(new Action<BINHLUAN>(this.attach_BINHLUANs), new Action<BINHLUAN>(this.detach_BINHLUANs));
			this._CTDONHANGs = new EntitySet<CTDONHANG>(new Action<CTDONHANG>(this.attach_CTDONHANGs), new Action<CTDONHANG>(this.detach_CTDONHANGs));
			this._SPGIAMGIAs = new EntitySet<SPGIAMGIA>(new Action<SPGIAMGIA>(this.attach_SPGIAMGIAs), new Action<SPGIAMGIA>(this.detach_SPGIAMGIAs));
			this._DANHMUC = default(EntityRef<DANHMUC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DM", DbType="Int NOT NULL")]
		public int ID_DM
		{
			get
			{
				return this._ID_DM;
			}
			set
			{
				if ((this._ID_DM != value))
				{
					if (this._DANHMUC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DMChanging(value);
					this.SendPropertyChanging();
					this._ID_DM = value;
					this.SendPropertyChanged("ID_DM");
					this.OnID_DMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tensanpham", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string tensanpham
		{
			get
			{
				return this._tensanpham;
			}
			set
			{
				if ((this._tensanpham != value))
				{
					this.OntensanphamChanging(value);
					this.SendPropertyChanging();
					this._tensanpham = value;
					this.SendPropertyChanged("tensanpham");
					this.OntensanphamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giabd", DbType="Int NOT NULL")]
		public int giabd
		{
			get
			{
				return this._giabd;
			}
			set
			{
				if ((this._giabd != value))
				{
					this.OngiabdChanging(value);
					this.SendPropertyChanging();
					this._giabd = value;
					this.SendPropertyChanged("giabd");
					this.OngiabdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trongluong", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string trongluong
		{
			get
			{
				return this._trongluong;
			}
			set
			{
				if ((this._trongluong != value))
				{
					this.OntrongluongChanging(value);
					this.SendPropertyChanging();
					this._trongluong = value;
					this.SendPropertyChanged("trongluong");
					this.OntrongluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mausac", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string mausac
		{
			get
			{
				return this._mausac;
			}
			set
			{
				if ((this._mausac != value))
				{
					this.OnmausacChanging(value);
					this.SendPropertyChanging();
					this._mausac = value;
					this.SendPropertyChanged("mausac");
					this.OnmausacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgLink", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ImgLink
		{
			get
			{
				return this._ImgLink;
			}
			set
			{
				if ((this._ImgLink != value))
				{
					this.OnImgLinkChanging(value);
					this.SendPropertyChanging();
					this._ImgLink = value;
					this.SendPropertyChanged("ImgLink");
					this.OnImgLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memory", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string memory
		{
			get
			{
				return this._memory;
			}
			set
			{
				if ((this._memory != value))
				{
					this.OnmemoryChanging(value);
					this.SendPropertyChanging();
					this._memory = value;
					this.SendPropertyChanged("memory");
					this.OnmemoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hedieuhanh", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string hedieuhanh
		{
			get
			{
				return this._hedieuhanh;
			}
			set
			{
				if ((this._hedieuhanh != value))
				{
					this.OnhedieuhanhChanging(value);
					this.SendPropertyChanging();
					this._hedieuhanh = value;
					this.SendPropertyChanged("hedieuhanh");
					this.OnhedieuhanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vga", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string vga
		{
			get
			{
				return this._vga;
			}
			set
			{
				if ((this._vga != value))
				{
					this.OnvgaChanging(value);
					this.SendPropertyChanging();
					this._vga = value;
					this.SendPropertyChanged("vga");
					this.OnvgaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpuz", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string cpuz
		{
			get
			{
				return this._cpuz;
			}
			set
			{
				if ((this._cpuz != value))
				{
					this.OncpuzChanging(value);
					this.SendPropertyChanging();
					this._cpuz = value;
					this.SendPropertyChanged("cpuz");
					this.OncpuzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_battery", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string battery
		{
			get
			{
				return this._battery;
			}
			set
			{
				if ((this._battery != value))
				{
					this.OnbatteryChanging(value);
					this.SendPropertyChanging();
					this._battery = value;
					this.SendPropertyChanged("battery");
					this.OnbatteryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phukiendikem", DbType="NVarChar(100)")]
		public string phukiendikem
		{
			get
			{
				return this._phukiendikem;
			}
			set
			{
				if ((this._phukiendikem != value))
				{
					this.OnphukiendikemChanging(value);
					this.SendPropertyChanging();
					this._phukiendikem = value;
					this.SendPropertyChanged("phukiendikem");
					this.OnphukiendikemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chedobaohanh", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string chedobaohanh
		{
			get
			{
				return this._chedobaohanh;
			}
			set
			{
				if ((this._chedobaohanh != value))
				{
					this.OnchedobaohanhChanging(value);
					this.SendPropertyChanging();
					this._chedobaohanh = value;
					this.SendPropertyChanged("chedobaohanh");
					this.OnchedobaohanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_BINHLUAN", Storage="_BINHLUANs", ThisKey="ID_SP", OtherKey="ID_SP")]
		public EntitySet<BINHLUAN> BINHLUANs
		{
			get
			{
				return this._BINHLUANs;
			}
			set
			{
				this._BINHLUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CTDONHANG", Storage="_CTDONHANGs", ThisKey="ID_SP", OtherKey="ID_SP")]
		public EntitySet<CTDONHANG> CTDONHANGs
		{
			get
			{
				return this._CTDONHANGs;
			}
			set
			{
				this._CTDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_SPGIAMGIA", Storage="_SPGIAMGIAs", ThisKey="ID_SP", OtherKey="ID_SP")]
		public EntitySet<SPGIAMGIA> SPGIAMGIAs
		{
			get
			{
				return this._SPGIAMGIAs;
			}
			set
			{
				this._SPGIAMGIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUC_SANPHAM", Storage="_DANHMUC", ThisKey="ID_DM", OtherKey="ID_DM", IsForeignKey=true)]
		public DANHMUC DANHMUC
		{
			get
			{
				return this._DANHMUC.Entity;
			}
			set
			{
				DANHMUC previousValue = this._DANHMUC.Entity;
				if (((previousValue != value) 
							|| (this._DANHMUC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DANHMUC.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._DANHMUC.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_DM = value.ID_DM;
					}
					else
					{
						this._ID_DM = default(int);
					}
					this.SendPropertyChanged("DANHMUC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CTDONHANGs(CTDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CTDONHANGs(CTDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_SPGIAMGIAs(SPGIAMGIA entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_SPGIAMGIAs(SPGIAMGIA entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPGIAMGIA")]
	public partial class SPGIAMGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_KM;
		
		private int _ID_SP;
		
		private int _soluong;
		
		private int _giaht;
		
		private System.DateTime _ngayban;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KMChanging(int value);
    partial void OnID_KMChanged();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnsoluongChanging(int value);
    partial void OnsoluongChanged();
    partial void OngiahtChanging(int value);
    partial void OngiahtChanged();
    partial void OnngaybanChanging(System.DateTime value);
    partial void OnngaybanChanged();
    #endregion
		
		public SPGIAMGIA()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_KM
		{
			get
			{
				return this._ID_KM;
			}
			set
			{
				if ((this._ID_KM != value))
				{
					this.OnID_KMChanging(value);
					this.SendPropertyChanging();
					this._ID_KM = value;
					this.SendPropertyChanged("ID_KM");
					this.OnID_KMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="Int NOT NULL")]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int NOT NULL")]
		public int soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giaht", DbType="Int NOT NULL")]
		public int giaht
		{
			get
			{
				return this._giaht;
			}
			set
			{
				if ((this._giaht != value))
				{
					this.OngiahtChanging(value);
					this.SendPropertyChanging();
					this._giaht = value;
					this.SendPropertyChanged("giaht");
					this.OngiahtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayban", DbType="Date NOT NULL")]
		public System.DateTime ngayban
		{
			get
			{
				return this._ngayban;
			}
			set
			{
				if ((this._ngayban != value))
				{
					this.OnngaybanChanging(value);
					this.SendPropertyChanging();
					this._ngayban = value;
					this.SendPropertyChanged("ngayban");
					this.OnngaybanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_SPGIAMGIA", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.SPGIAMGIAs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.SPGIAMGIAs.Add(this);
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TK;
		
		private string _username;
		
		private string _password;
		
		private string _tentk;
		
		private string _phone;
		
		private string _mail;
		
		private string _diachi;
		
		private EntitySet<BINHLUAN> _BINHLUANs;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TKChanging(int value);
    partial void OnID_TKChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OntentkChanging(string value);
    partial void OntentkChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnmailChanging(string value);
    partial void OnmailChanged();
    partial void OndiachiChanging(string value);
    partial void OndiachiChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._BINHLUANs = new EntitySet<BINHLUAN>(new Action<BINHLUAN>(this.attach_BINHLUANs), new Action<BINHLUAN>(this.detach_BINHLUANs));
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TK
		{
			get
			{
				return this._ID_TK;
			}
			set
			{
				if ((this._ID_TK != value))
				{
					this.OnID_TKChanging(value);
					this.SendPropertyChanging();
					this._ID_TK = value;
					this.SendPropertyChanged("ID_TK");
					this.OnID_TKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tentk", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tentk
		{
			get
			{
				return this._tentk;
			}
			set
			{
				if ((this._tentk != value))
				{
					this.OntentkChanging(value);
					this.SendPropertyChanging();
					this._tentk = value;
					this.SendPropertyChanged("tentk");
					this.OntentkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mail
		{
			get
			{
				return this._mail;
			}
			set
			{
				if ((this._mail != value))
				{
					this.OnmailChanging(value);
					this.SendPropertyChanging();
					this._mail = value;
					this.SendPropertyChanged("mail");
					this.OnmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string diachi
		{
			get
			{
				return this._diachi;
			}
			set
			{
				if ((this._diachi != value))
				{
					this.OndiachiChanging(value);
					this.SendPropertyChanging();
					this._diachi = value;
					this.SendPropertyChanged("diachi");
					this.OndiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_BINHLUAN", Storage="_BINHLUANs", ThisKey="ID_TK", OtherKey="ID_TK")]
		public EntitySet<BINHLUAN> BINHLUANs
		{
			get
			{
				return this._BINHLUANs;
			}
			set
			{
				this._BINHLUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="ID_TK", OtherKey="ID_TK")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINTUC")]
	public partial class TINTUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TIN;
		
		private System.Nullable<int> _ID_NHOM;
		
		private string _tentin;
		
		private string _ImgTin;
		
		private string _mota;
		
		private EntitySet<DONHANG> _DONHANGs;
		
		private EntityRef<NHOMTIN> _NHOMTIN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TINChanging(int value);
    partial void OnID_TINChanged();
    partial void OnID_NHOMChanging(System.Nullable<int> value);
    partial void OnID_NHOMChanged();
    partial void OntentinChanging(string value);
    partial void OntentinChanged();
    partial void OnImgTinChanging(string value);
    partial void OnImgTinChanged();
    partial void OnmotaChanging(string value);
    partial void OnmotaChanged();
    #endregion
		
		public TINTUC()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			this._NHOMTIN = default(EntityRef<NHOMTIN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TIN
		{
			get
			{
				return this._ID_TIN;
			}
			set
			{
				if ((this._ID_TIN != value))
				{
					this.OnID_TINChanging(value);
					this.SendPropertyChanging();
					this._ID_TIN = value;
					this.SendPropertyChanged("ID_TIN");
					this.OnID_TINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NHOM", DbType="Int")]
		public System.Nullable<int> ID_NHOM
		{
			get
			{
				return this._ID_NHOM;
			}
			set
			{
				if ((this._ID_NHOM != value))
				{
					if (this._NHOMTIN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NHOMChanging(value);
					this.SendPropertyChanging();
					this._ID_NHOM = value;
					this.SendPropertyChanged("ID_NHOM");
					this.OnID_NHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tentin", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string tentin
		{
			get
			{
				return this._tentin;
			}
			set
			{
				if ((this._tentin != value))
				{
					this.OntentinChanging(value);
					this.SendPropertyChanging();
					this._tentin = value;
					this.SendPropertyChanged("tentin");
					this.OntentinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgTin", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ImgTin
		{
			get
			{
				return this._ImgTin;
			}
			set
			{
				if ((this._ImgTin != value))
				{
					this.OnImgTinChanging(value);
					this.SendPropertyChanging();
					this._ImgTin = value;
					this.SendPropertyChanged("ImgTin");
					this.OnImgTinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mota", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string mota
		{
			get
			{
				return this._mota;
			}
			set
			{
				if ((this._mota != value))
				{
					this.OnmotaChanging(value);
					this.SendPropertyChanging();
					this._mota = value;
					this.SendPropertyChanged("mota");
					this.OnmotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINTUC_DONHANG", Storage="_DONHANGs", ThisKey="ID_TIN", OtherKey="ID_TIN")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMTIN_TINTUC", Storage="_NHOMTIN", ThisKey="ID_NHOM", OtherKey="ID_NHOM", IsForeignKey=true)]
		public NHOMTIN NHOMTIN
		{
			get
			{
				return this._NHOMTIN.Entity;
			}
			set
			{
				NHOMTIN previousValue = this._NHOMTIN.Entity;
				if (((previousValue != value) 
							|| (this._NHOMTIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHOMTIN.Entity = null;
						previousValue.TINTUCs.Remove(this);
					}
					this._NHOMTIN.Entity = value;
					if ((value != null))
					{
						value.TINTUCs.Add(this);
						this._ID_NHOM = value.ID_NHOM;
					}
					else
					{
						this._ID_NHOM = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHOMTIN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.TINTUC = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.TINTUC = null;
		}
	}
}
#pragma warning restore 1591
